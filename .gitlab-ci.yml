include:
  - project: donaldrich/modular-gitlab-ci
    file: templates/default.yml
  # - project: donaldrich/modular-gitlab-ci
  #   file: function/repo/auto-push.yml
  - local: .meta/pipelines.gitlab-ci.yml

cache:
  # untracked: true
  paths:
    - .meta/snippets/

stages:
  - pre
  - lint
  - debug
  - fetch-version
  - build
  - release
  - documentation
  - deploy
  - post

variables:
  DISABLE_LINTING: "true"
  DISABLE_SAST: "true"
  PUSHOVER_ID: $CI_PROJECT_TITLE
# update-repo:
#   stage: .post
#   variables:
#     GIT_STRATEGY: fetch
#   before_script:
#     - rm -r public/ || true
#   script:
#     # - apk add git
#     - ./run-all.sh
#     - git config --global user.email $GIT_EMAIL
#     - git config --global user.name $GIT_NAME
#     - git config --global user.username $GIT_USER
#     - git remote set-url --push origin $GIT_PUSH_URL
#     - git remote show origin
#     - git add .
#     - git commit -m "auto commit" || echo "no changes to repo"
#     # - git commit -m "auto commit [skip ci]" || echo "no changes to repo"
#     - git push origin HEAD:$CI_COMMIT_REF_NAME || echo "no changes to repo"
#   rules:
#   - changes:
#     - "**/*/*"


fetch-semantic-version:
  image:
    name: donaldrich/function:semantic-release
    entrypoint: [""]
  stage: fetch-version
  only:
    refs:
      - master
    # - alpha
    # - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
    # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - semantic-release --generate-notes false --dry-run
  artifacts:
    paths:
      - VERSION.txt

generate-non-semantic-version:
  stage: fetch-version
  except:
    refs:
      - master
      # - alpha
      # - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
      # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - echo build-$CI_PIPELINE_ID > VERSION.txt
  artifacts:
    paths:
      - VERSION.txt

build:
  stage: build
  script:
    - echo "Version is $(cat VERSION.txt)"

release:
  image:
    name: donaldrich/function:semantic-release
    entrypoint: [""]
  stage: release
  only:
    refs:
      - master
    # - alpha
    # # This matches maintenance branches
    # - /^(([0-9]+)\.)?([0-9]+)\.x/
    # # This matches pre-releases
    # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
  script:
    - semantic-release
