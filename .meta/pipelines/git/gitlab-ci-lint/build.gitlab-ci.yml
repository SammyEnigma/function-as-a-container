.buildx-prebuild: &buildx-prebuild
- docker context create default_tls
- docker buildx create --driver docker-container --driver-opt image=moby/buildkit:master,network=host --use default_tls
- docker buildx inspect --bootstrap
- docker buildx ls

.registry-login: &registry-login
- echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
- echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin

.var-print: &var-print
- echo $REGISTRY
- echo $REGISTRY_IMAGE
- echo $CI_REGISTRY_IMAGE
- echo $IMAGE_TAG
- echo $IMAGE_NAME
- echo $CI_BUILD_ARCHS
- echo $DOCKERFILE
- echo $DOCKER_BUILD_DIR
- echo $DOCKERHUB_USER
- echo $REPO_URL
- echo $DOCKER_HOST
- echo $DOCKER_TLS_CERTDIR
- echo $DOCKER_CLI_EXPERIMENTAL
- echo $DOCKER_DRIVER

build:gitlab-ci-lint:
  retry: 2
  interruptible: true
  allow_failure: true
  image:
    name: donaldrich/docker:latest
    entrypoint: [""]
  stage: build
  before_script:
    - *buildx-prebuild
    - *var-print
    - *registry-login
  script:
    - >
      docker build
      --pull
      --push
      --progress auto
      --cache-from $REGISTRY/function:gitlab-ci-lint
      --build-arg BUILDKIT_INLINE_CACHE=1
      --tag $REGISTRY/function:gitlab-ci-lint
      --file git/gitlab-ci-lint/Dockerfile
      git/gitlab-ci-lint
  services:
    - name: docker:stable-dind
      command: ["--experimental"]
  variables:
    REGISTRY: $DOCKERHUB_USER
#    DOCKER_BUILD_DIR: git/gitlab-ci-lint
#    DOCKER_BUILD_CONTEXT: git/gitlab-ci-lint
#    DOCKERFILE: Dockerfile
    GIT_STRATEGY: fetch
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: /certs/client
    DOCKER_TLS_CERTDIR: /certs
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
      - "git/gitlab-ci-lint/*"
      when: on_success
    - if: '$TRIGGER_VAR1 == "all"'
      when: on_success
    - if: '$TRIGGER_VAR1 == "gitlab-ci-lint"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success

docs:gitlab-ci-lint:
  needs:
  - build:gitlab-ci-lint
  image:
    name: donaldrich/docker:latest
    entrypoint: [""]
  retry: 2
  before_script:
    - *var-print
  stage: documentation
  services:
    - name: docker:stable-dind
      command: ["--experimental"]
  script:
    - docker pull donaldrich/function:gitlab-ci-lint
    - docker run --rm donaldrich/function:gitlab-ci-lint help || true
    - docker run --rm donaldrich/function:gitlab-ci-lint help > $CI_PROJECT_DIR/.meta/snippets/config/gitlab-ci-lint.md || true
    - docker run --rm donaldrich/function:gitlab-ci-lint validate > $CI_PROJECT_DIR/.meta/snippets/version/gitlab-ci-lint-docker.md || true
    - docker image inspect donaldrich/function:gitlab-ci-lint | jq . > $CI_PROJECT_DIR/.meta/snippets/image-info/gitlab-ci-lint.md
   #  - docker history donaldrich/function:gitlab-ci-lint > $CI_PROJECT_DIR/.meta/snippets/layers/gitlab-ci-lint.md || true
  variables:
    REGISTRY: $DOCKERHUB_USER
#    DOCKER_BUILD_DIR: git/gitlab-ci-lint
#    DOCKER_BUILD_CONTEXT: git/gitlab-ci-lint
#    DOCKERFILE: Dockerfile
    GIT_STRATEGY: fetch
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: /certs/client
    DOCKER_TLS_CERTDIR: /certs
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
      - "git/gitlab-ci-lint/*"
      when: on_success
    - if: '$TRIGGER_VAR1 == "all"'
      when: on_success
    - if: '$TRIGGER_VAR1 == "gitlab-ci-lint"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success
